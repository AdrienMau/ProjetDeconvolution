function [dataA, dataB, movpar, timepar, pmspar, comment]=sclmread(file)
% [dataA, dataB, MoveParem, TimeParam, PMSParam, Comment] = sclmread(file)
% ****
% SCLMread extracts data from data files generated by SCLM


if nargin<1
   help sclmread
   return
end

[f_handle, message]=fopen(file,'r');

if f_handle==-1
   error(['Error opening file ',file,'! (',message,')']);
   return
end

s1='';s='o';
% read header
while (s(1)~='*') & ~feof(f_handle)
   s=fgetl(f_handle);
   if length(s)<1, s=' '; end % be sure not to run into "Index exceed matrix dimensions." ...
   s1=strvcat(s1,s);
end

version = sscanf(s1(2,:), 'Data File Version: %s');

switch version
	case '1.00'
		disp (s1(1:3,:))
		xvals=sscanf(s1(4,:),'X movement %d/%d/%d');
		yvals=sscanf(s1(5,:),'Y movement %d/%d/%d');
		zvals=sscanf(s1(6,:),'Z movement %d/%d/%d');
		PulseLength=sscanf(s1(7,:),'Pulselength: %f');
		CollectTime=sscanf(s1(8,:),'Collecttime: %f');
		ReadingDelay=sscanf(s1(9,:),'Readingdelay: %f');
		SettingsA=sscanf(s1(10,:),'SettingsA: %f/%f');
		SettingsB=sscanf(s1(11,:),'SettingsB:%f/%f');
      filetype='PIC'
 		s=fgetl(f_handle);

		if s(1)~='*'
		   comment=s; s=fgetl(f_handle);
		end
   
   case '2.00'
  		disp (s1(1:4,:))
		xvals=sscanf(s1(5,:),'X movement %d/%d/%d');
		yvals=sscanf(s1(6,:),'Y movement %d/%d/%d');
		zvals=sscanf(s1(7,:),'Z movement %d/%d/%d');
		PulseLength=sscanf(s1(8,:),'pulselength: %f');
		CollectTime=sscanf(s1(9,:),'collecttime: %f');
		ReadingDelay=sscanf(s1(10,:),'readingdelay: %f');
		SettingsA=sscanf(s1(11,:),'settingsA: %f/%f');
		SettingsB=sscanf(s1(12,:),'settingsB:%f/%f');
      filetype=s1(4,1:3);
      comment=strvcat(fgetl(f_handle), fgetl(f_handle)); % at least two lines comment!
		s=fgetl(f_handle);
      
      if length(s)<1, s=' '; end % be sure not to run into "Index exceed matrix dimensions." ...
      
		while s(1)~='*'
		   comment=strvcat(comment, s); s=fgetl(f_handle);if length(s)<1, s=' '; end, end

end

movpar=[xvals';yvals';zvals'];
timepar=[PulseLength;CollectTime;ReadingDelay];
pmspar=[SettingsA';SettingsB'];	
   
switch filetype
   case 'PIC'
		xanz = floor((xvals(2)-xvals(1))/xvals(3)) + 1;
		yanz = floor((yvals(2)-yvals(1))/yvals(3)) + 1;
      zanz = floor((zvals(2)-zvals(1))/zvals(3)) + 1;
   case 'SPC','COR'
      xanz = ReadingDelay;
      yanz = 1; zanz = 1;
   case 'TRM'
      a=sscanf(comment(end,:), 'var: %s / %s / %g - %g (%g)');
      xanz=floor((a(end-1)-a(end-2))/a(end));
      yanz=1; zanz=1;
end
     
anz = xanz*yanz*zanz;

if filetype=='TRM'
   dataA=[];
   s=fgetl(f_handle);
   while s(1)~='*'
      dataA=[dataA;sscanf(s, '%g')'];
      s=fgetl(f_handle);
   end
else
   dataA=reshape(fread(f_handle,anz,'uint32'),xanz,yanz,zanz);
end

s=fgetl(f_handle); s=fgetl(f_handle); s=fgetl(f_handle); %expect end, space, begin-line

if filetype=='TRM'
   dataB=[];
else
   dataB=reshape(fread(f_handle,anz,'uint32'),xanz,yanz,zanz);
end

fclose(f_handle);

if (nargout == 4) % compatibility for dataread
   dataA= [ reshape(dataA, xanz, yanz*zanz), reshape(dataB, xanz, yanz*zanz)];
   dataB= [xanz, yanz*zanz, 1, zanz, 2];
   timepar = strvcat(comment, ...
      ['X/Y/Z:   ', num2str(reshape(movpar',1,9),'%8g'), '  (3* min/max/step)'], ...
      ['timing:  ', num2str(timepar','%8g'),'  (ill/exp/wait)'], ... 
   	['PMS A/B: ', num2str(reshape(pmspar',1,4), '%8g'), '  (2* gate/threshold)']);
   movpar = file;
end
